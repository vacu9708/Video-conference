{"ast":null,"code":"import _classCallCheck from\"G:/Software/github/video-conference/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"G:/Software/github/video-conference/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";var My_websocket=/*#__PURE__*/function(){function My_websocket(address){var _this=this;_classCallCheck(this,My_websocket);this.targets=void 0;this.ws=void 0;this.is_open=void 0;this.ws=new WebSocket(address);// console.log('my_websocket allocated')\nthis.targets=new Map();this.is_open=false;this.ws.onopen=function(){_this.is_open=true;};this.ws.onclose=function(msg){console.log(msg);};this.ws.onerror=function(error){console.log(error);};this.ws.onmessage=function(msg){// console.log(msg.data)\nvar json=JSON.parse(msg.data);_this.targets.get(json.target)(json);};}_createClass(My_websocket,[{key:\"on\",value:function on(target,callback){this.targets.set(target,callback);}},{key:\"send\",value:function send(msg){this.ws.send(msg);}}]);return My_websocket;}();// console.log('my_websocket imported')\nexport default My_websocket;","map":{"version":3,"names":["My_websocket","address","targets","ws","is_open","WebSocket","Map","onopen","onclose","msg","console","log","onerror","error","onmessage","json","JSON","parse","data","get","target","callback","set","send"],"sources":["G:/Software/github/video-conference/client/src/my_websocket.tsx"],"sourcesContent":[" class My_websocket{\r\n    targets: Map<string, any>;\r\n    ws: any\r\n    is_open: boolean\r\n    constructor(address: string) {\r\n        this.ws=new WebSocket(address)\r\n        // console.log('my_websocket allocated')\r\n        this.targets=new Map()\r\n        this.is_open=false\r\n        this.ws.onopen = () => {\r\n            this.is_open=true\r\n        }\r\n        this.ws.onclose = (msg: any) => {\r\n            console.log(msg)\r\n        };\r\n        this.ws.onerror = (error: any) => {\r\n            console.log(error)\r\n        };\r\n        this.ws.onmessage=(msg: any)=>{\r\n            // console.log(msg.data)\r\n            let json: any=JSON.parse(msg.data)\r\n            this.targets.get(json.target)(json)\r\n        }\r\n    }\r\n    on(target: string, callback: (json: any)=>void){\r\n        this.targets.set(target, callback)\r\n    }\r\n    send(msg: string){\r\n        this.ws.send(msg)\r\n    }\r\n}\r\n// console.log('my_websocket imported')\r\nexport default My_websocket"],"mappings":"iQAAOA,aAAY,yBAIf,sBAAYC,OAAe,CAAE,wDAH7BC,OAAO,aACPC,EAAE,aACFC,OAAO,QAEH,IAAI,CAACD,EAAE,CAAC,GAAIE,UAAS,CAACJ,OAAO,CAAC,CAC9B;AACA,IAAI,CAACC,OAAO,CAAC,GAAII,IAAG,EAAE,CACtB,IAAI,CAACF,OAAO,CAAC,KAAK,CAClB,IAAI,CAACD,EAAE,CAACI,MAAM,CAAG,UAAM,CACnB,KAAI,CAACH,OAAO,CAAC,IAAI,CACrB,CAAC,CACD,IAAI,CAACD,EAAE,CAACK,OAAO,CAAG,SAACC,GAAQ,CAAK,CAC5BC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CACpB,CAAC,CACD,IAAI,CAACN,EAAE,CAACS,OAAO,CAAG,SAACC,KAAU,CAAK,CAC9BH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CACtB,CAAC,CACD,IAAI,CAACV,EAAE,CAACW,SAAS,CAAC,SAACL,GAAQ,CAAG,CAC1B;AACA,GAAIM,KAAS,CAACC,IAAI,CAACC,KAAK,CAACR,GAAG,CAACS,IAAI,CAAC,CAClC,KAAI,CAAChB,OAAO,CAACiB,GAAG,CAACJ,IAAI,CAACK,MAAM,CAAC,CAACL,IAAI,CAAC,CACvC,CAAC,CACL,CAAC,2CACD,YAAGK,MAAc,CAAEC,QAA2B,CAAC,CAC3C,IAAI,CAACnB,OAAO,CAACoB,GAAG,CAACF,MAAM,CAAEC,QAAQ,CAAC,CACtC,CAAC,oBACD,cAAKZ,GAAW,CAAC,CACb,IAAI,CAACN,EAAE,CAACoB,IAAI,CAACd,GAAG,CAAC,CACrB,CAAC,4BAEL;AACA,cAAeT,aAAY"},"metadata":{},"sourceType":"module"}