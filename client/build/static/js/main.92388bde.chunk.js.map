{"version":3,"sources":["components/Streams.tsx","pages/Home.tsx","components/Messages.tsx","my_websocket.tsx","pages/Room.tsx","pages/DoorToRoom.tsx","App.tsx","index.tsx"],"names":["my_stream_","Home","React","useState","created_roomID","set_created_roomID","entered_roomID","set_entered_roomID","to_clip_board","useNavigate","textArea","document","createElement","value","window","location","href","body","appendChild","focus","select","execCommand","removeChild","className","onClick","axios","get","then","res","data","catch","error","alert","response","style","display","length","resize","disabled","onChange","e","sessionStorage","setItem","target","type","placeholder","get_time","date","Date","hour","getHours","minute","getMinutes","Messages","messages","map","message","i","fontSize","name","msg","memo","My_websocket","address","targets","ws","is_open","this","WebSocket","Map","onopen","onclose","console","log","onerror","onmessage","json","JSON","parse","callback","set","send","peers","Streams","video_grid","useRef","play_toggled","set_play_toggled","mute_toggled","set_mute_toggled","toggle_play","enabled","getVideoTracks","toggle_mute","getAudioTracks","add_video_stream","video","stream","srcObject","addEventListener","play","current","append","useEffect","navigator","mediaDevices","getUserMedia","audio","my_stream","my_peer","my_video","muted","on","Peer","uuid","call","answer","remote_video","remoteStream","peerID","stringify","remove","err","close","delete","ref","src","alt","Room","input_msg","set_input_msg","participants","set_participants","set_messages","messages_ref","message_window","useMemo","hostname","url","p","substring","split","interval","setInterval","getItem","roomID","clearInterval","scrollTop","scrollHeight","textAlign","onKeyDown","key","preventDefault","DoorToRoom","find_roomID","App","path","element","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.92388bde.chunk.js","sourcesContent":["import React from \"react\";\r\nimport My_websocket from '../my_websocket'\r\nimport Peer from 'peerjs'\r\n\r\nlet peers=new Map()\r\nlet my_stream_: MediaStream\r\ninterface ws_{\r\n    ws: My_websocket\r\n  }\r\nconst Streams=({ws}: ws_)=>{\r\n    const video_grid=React.useRef<any>()\r\n    const [play_toggled, set_play_toggled]=React.useState(false)\r\n    const [mute_toggled, set_mute_toggled]=React.useState(false)\r\n\r\n    const toggle_play = () => {\r\n        let enabled = my_stream_.getVideoTracks()[0].enabled;\r\n        if (enabled) {\r\n            my_stream_.getVideoTracks()[0].enabled = false;\r\n        } else {\r\n          my_stream_.getVideoTracks()[0].enabled = true;\r\n        }\r\n        set_play_toggled(!play_toggled)\r\n      }\r\n\r\n    const toggle_mute = () => {\r\n        const enabled = my_stream_.getAudioTracks()[0].enabled;\r\n        if (enabled) {\r\n            my_stream_.getAudioTracks()[0].enabled = false;\r\n        } else {\r\n          my_stream_.getAudioTracks()[0].enabled = true;\r\n        }\r\n        set_mute_toggled(!mute_toggled)\r\n      }\r\n\r\n      const add_video_stream=(video: HTMLVideoElement, stream: MediaStream)=>{\r\n        video.srcObject = stream\r\n        video.addEventListener('loadedmetadata', () => {\r\n            video.play()\r\n        })\r\n        video_grid.current.append(video)\r\n    }\r\n\r\n    const leave_meeting=()=>{\r\n        ws.ws.close()\r\n        window.location.href='/'\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n        .then(my_stream => {\r\n            my_stream_=my_stream\r\n            const my_video = document.createElement('video')\r\n            my_video.muted=true\r\n            add_video_stream(my_video, my_stream)\r\n\r\n            let my_peer: Peer\r\n            ws.on('uuid', (json: any)=>{ // received my uuid\r\n                my_peer=new Peer(json.uuid)\r\n                my_peer.on('call', (call: any) => {\r\n                    console.log('Call from a peer')\r\n                    call.answer(my_stream)\r\n                    const remote_video = document.createElement('video')\r\n                    call.on('stream', (remoteStream: MediaStream) => {\r\n                        add_video_stream(remote_video, remoteStream)\r\n                    })\r\n                })\r\n                my_peer.on('open', peerID => {\r\n                    console.log('You joined room as '+peerID)\r\n                    ws.send(JSON.stringify({target: \"new_peer\", peerID: peerID}))\r\n                })\r\n            })\r\n            ws.on('new_peer', (json: any)=>{ // New peer received\r\n                console.log('you called a new peer')\r\n                const call = my_peer.call(json.peerID, my_stream);\r\n                const remote_video = document.createElement('video')\r\n                call.on(\"stream\", (remoteStream) => { // answer of the call\r\n                    add_video_stream(remote_video, remoteStream)\r\n                });\r\n                call.on('close', () => {\r\n                    remote_video.remove()\r\n                })\r\n                peers.set(json.peerID, call)\r\n            })\r\n            ws.send(JSON.stringify({target: 'uuid'}))\r\n        })\r\n        .catch(err => {\r\n            console.error(\"Failed to get local stream\", err);\r\n        })\r\n        \r\n        ws.on('peer_disconnected', (json: any)=>{\r\n            console.log('peer left')\r\n            peers.get(json.peerID).close()\r\n            peers.delete(json.peerID)\r\n        })\r\n    },[ws])\r\n\r\n    // React.useEffect(()=>{\r\n    //     set_render(!render)\r\n    // },[video_grid, render])\r\n\r\n    return(\r\n        <>\r\n        <div className=\"video_grid\" ref={video_grid}></div>\r\n        <div className=\"controller\">\r\n            <div className=\"stream_control_block\">\r\n                {play_toggled?\r\n                <div onClick={toggle_play} className=\"play stream_control_button\" >\r\n                    <img src='/icons/video.webp' alt=\"\"/>\r\n                    <span>Play Video</span>\r\n                </div>\r\n                :\r\n                <div onClick={toggle_play} className=\"stream_control_button\" >\r\n                    <img src='/icons/video.webp' alt=\"\"/>\r\n                    <span>Stop Video</span>\r\n                </div>}\r\n                {mute_toggled?\r\n                <div onClick={toggle_mute} className=\"unmute stream_control_button\" >\r\n                    <img src='/icons/mic.webp' alt=\"\"/>\r\n                    <span>Unmute</span>\r\n                </div>\r\n                :\r\n                <div onClick={toggle_mute} className=\"stream_control_button\" >\r\n                    <img src='/icons/mic.webp' alt=\"\"/>\r\n                    <span>Mute</span>\r\n                </div>}\r\n            </div>\r\n            <div className=\"stream_control_block\">\r\n                <div className=\"stream_control_button\">\r\n                    <img src='/icons/participants.webp' alt=\"\"/>\r\n                    <span>Participants</span>\r\n                </div>\r\n                <div className=\"stream_control_button\">\r\n                    <img src='/icons/chat.webp' alt=\"\"/>\r\n                    <span>Chat</span>\r\n                </div>\r\n            </div>\r\n            <div onClick={leave_meeting} className=\"leave_meetig stream_control_button\">\r\n                <span>Leave Meeting</span>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Streams","import React from \"react\";\r\nimport axios from 'axios'\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [created_roomID, set_created_roomID] = React.useState(\"\");\r\n  const [entered_roomID, set_entered_roomID] = React.useState(\"\");\r\n  // const test=React.useRef(()=>{console.log('hi')})\r\n  const navigate = useNavigate();\r\n  // React.useEffect(()=>{\r\n  // },[])\r\n\r\n  const create_room=()=>{\r\n    axios.get('/create_room', )\r\n    .then(res => { // Go to login page if sign up is successful\r\n      set_created_roomID(res.data)\r\n    })\r\n    .catch(error=>{\r\n      alert(error.response.data.error)\r\n    }) \r\n  }\r\n\r\n  const to_clip_board=async()=>{\r\n    const textArea = document.createElement(\"textarea\");\r\n    textArea.value = window.location.href+'door_to_room/'+created_roomID;\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n    document.execCommand(\"Copy\");\r\n    document.body.removeChild(textArea);\r\n    //await navigator.clipboard.writeText(created_roomID);\r\n  }\r\n\r\n  return(\r\n    <div className=\"home\">\r\n      <button onClick={create_room}>Create room</button>\r\n      <div style={{display:\"flex\"}}>\r\n        {created_roomID.length>0 && <button className={`copy button`} onClick={to_clip_board}>Copy room address</button>}\r\n        <textarea style={{resize: 'none'}} disabled={true} value={created_roomID}></textarea>\r\n      </div>\r\n      <input onChange={(e) => sessionStorage.setItem('name', e.target.value)} className=\"name_box\" type=\"text\" placeholder=\"name\" />\r\n      <input onChange={(e) => set_entered_roomID(e.target.value)} className=\"roomID_box\" type=\"text\" placeholder=\"room ID\" />\r\n      <button onClick={()=>(window.location.href=`/room/${entered_roomID}`)}>Join room</button>\r\n    </div>\r\n  )\r\n}\r\nexport default Home","import React from 'react'\r\n\r\nexport interface Msg{\r\n    target: string;\r\n    name: string\r\n    msg: string;\r\n}\r\n\r\ninterface Msgs{\r\n    messages: Msg[]\r\n}\r\n\r\nconst get_time=()=>{\r\n    const date=new Date()\r\n    const hour=date.getHours()\r\n    const minute=date.getMinutes()\r\n    return `${hour}:${minute}`\r\n}\r\n\r\nconst Messages=({messages}: Msgs)=>{\r\n    return(\r\n    <>\r\n    {messages.map((message, i)=>(\r\n        message.target==='chat_msg'?\r\n        <div className='msg' key={i}>\r\n            <div style={{fontSize: '20px'}}>{message.name} {`(${get_time()})`}</div>\r\n            {message.msg}\r\n        </div>\r\n        : message.target==='participant'?\r\n        <div className='new_participant_msg' key={i}>\r\n            {`${message.name} ${message.msg}`}\r\n        </div>\r\n        :{}\r\n    ))}\r\n    </>)\r\n}\r\n// export default Messages\r\nexport default React.memo(Messages);"," class My_websocket{\r\n    targets: Map<string, any>;\r\n    ws: any\r\n    is_open: boolean\r\n    constructor(address: string) {\r\n        this.ws=new WebSocket(address)\r\n        // console.log('my_websocket allocated')\r\n        this.targets=new Map()\r\n        this.is_open=false\r\n        this.ws.onopen = () => {\r\n            this.is_open=true\r\n        }\r\n        this.ws.onclose = (msg: any) => {\r\n            console.log(msg)\r\n        };\r\n        this.ws.onerror = (error: any) => {\r\n            console.log(error)\r\n        };\r\n        this.ws.onmessage=(msg: any)=>{\r\n            // console.log(msg.data)\r\n            let json: any=JSON.parse(msg.data)\r\n            this.targets.get(json.target)(json)\r\n        }\r\n    }\r\n    on(target: string, callback: (json: any)=>void){\r\n        this.targets.set(target, callback)\r\n    }\r\n    send(msg: string){\r\n        this.ws.send(msg)\r\n    }\r\n}\r\n// console.log('my_websocket imported')\r\nexport default My_websocket","import React from \"react\";\r\nimport Messages from '../components/Messages'\r\nimport {Msg} from '../components/Messages'\r\nimport My_websocket from '../my_websocket'\r\nimport Streams from '../components/Streams'\r\n\r\nconst Room = () => {\r\n  const [input_msg, set_input_msg] = React.useState(\"\");\r\n  const [participants, set_participants] = React.useState<string[]>([])\r\n  const [messages, set_messages]=React.useState<Msg[]>([])\r\n  const messages_ref=React.useRef<Msg[]>([])\r\n  const message_window=React.useRef<any>()\r\n  const ws=React.useMemo(()=>new My_websocket(`wss://${window.location.hostname}`),[])\r\n\r\n  React.useEffect(()=>{\r\n    // Find roomID\r\n    let url=window.location.href\r\n    let p=url.length-1\r\n    while(url[p]!=='/') p--\r\n    sessionStorage.setItem('roomID', url.substring(p+1, url.length))\r\n\r\n    ws.on('err', (json: any)=>{\r\n      // window.location.reload()\r\n      alert('Multiple connections not allowed!')\r\n      console.log(json)\r\n    })\r\n    ws.on('participant', (json: any)=>{\r\n      set_participants(json.participants.split('/'))\r\n      json={target: json.target, name: json.name, msg: json.msg}\r\n      messages_ref.current=[...messages_ref.current, json]\r\n      set_messages(messages_ref.current)\r\n    })\r\n    ws.on('chat_msg', (json: any)=>{\r\n      json={target: json.target, name: json.name, msg: json.msg}\r\n      messages_ref.current=[...messages_ref.current, json]\r\n      set_messages(messages_ref.current)\r\n    })\r\n    const interval=setInterval(()=>{\r\n      if(ws.is_open){\r\n        ws.send(JSON.stringify({target: \"join_room\", name: sessionStorage.getItem('name'), roomID: sessionStorage.getItem('roomID')}))\r\n        clearInterval(interval)\r\n      }\r\n    }, 1)\r\n  },[])\r\n\r\n  React.useEffect(()=>{\r\n    message_window.current.scrollTop = message_window.current.scrollHeight\r\n  },[messages])\r\n\r\n  const send_msg=(e: any)=>{\r\n    if(e.key!=='Enter')\r\n      return\r\n    e.preventDefault()\r\n    ws.send(JSON.stringify({target: 'chat_msg', msg: input_msg}))\r\n    set_input_msg('')\r\n  }\r\n\r\n  return(\r\n    <div className=\"room_frame\">\r\n      <div className=\"left_window\" style={{fontSize: '50px', textAlign: 'center'}}>\r\n        {ws.is_open? <Streams ws={ws}/>: <></>}\r\n      </div>\r\n      <div className=\"chat_window\">\r\n        <div className=\"chat_header\">\r\n          Chat<br/>\r\n          <div className='participants'>{participants}</div>\r\n        </div>\r\n        <div className=\"message_window\" ref={message_window}>\r\n          <Messages messages={messages}/>\r\n        </div>\r\n        <textarea className=\"msg_input\" onChange={\r\n          (e) => set_input_msg(e.target.value)} onKeyDown={send_msg} placeholder='target message here' value={input_msg} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Room;","import React from 'react'\r\n\r\nconst find_roomID=()=>{\r\n    let url=window.location.href\r\n    let p=url.length-1\r\n    while(url[p]!=='/') p--\r\n    return url.substring(p+1, url.length)\r\n}\r\n\r\nconst DoorToRoom=()=>{\r\n    return(\r\n        <>\r\n        <input onChange={(e) => sessionStorage.setItem('name', e.target.value)} className=\"name_box\" type=\"text\" placeholder=\"name\"\r\n        style={{fontSize: '30px'}}/>\r\n        <button className={`join room button`} onClick={()=>((window.location.href=`/room/${find_roomID()}`))}style={{fontSize: '30px'}}>Join room</button>\r\n        </>\r\n    )\r\n}\r\nexport default DoorToRoom","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Home from './pages/Home';\r\nimport Room from './pages/Room';\r\nimport DoorToRoom from './pages/DoorToRoom';\r\nimport \"./style.css\";\r\nimport My_websocket from './my_websocket'\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home/>}/>\r\n          <Route path=\"/door_to_room/*\" element={<DoorToRoom/>}/>\r\n          <Route path=\"/room/*\" element={<Room/>}/>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App'\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement);\r\nroot.render(\r\n  <App/>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}